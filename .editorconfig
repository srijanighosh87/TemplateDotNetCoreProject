# editorconfig.org

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 2 spaces as indentation
[*]
insert_final_newline = true
indent_style = space
indent_size = 2
trim_trailing_whitespace = true
tab_width = 2
end_of_line = crlf
charset = utf-8

# Generated code
[*{_AssemblyInfo.cs,.notsupported.cs,AsmOffsets.cs}]
generated_code = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_collection_expression = true:suggestion

# C# files
[*.cs]
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Types: use keywords instead of BCL types, and permit var only when the type is clear
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:none
csharp_style_var_elsewhere = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Types and nonfield members should use PascalCase
dotnet_naming_rule.types_and_operations_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_and_operations_should_be_pascal_case.symbols = types_and_operations
dotnet_naming_rule.types_and_operations_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.types_and_operations.applicable_kinds = namespace, class, struct, interface, enum, property, method, event, delegate, type_parameter, local_function 
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Interfaces should have "I" prefix
dotnet_naming_rule.async_methods_end_in_async.symbols = interfaces
dotnet_naming_rule.async_methods_end_in_async.style = interface_prefix_style
dotnet_naming_rule.async_methods_end_in_async.severity = warning
dotnet_naming_symbols.async_methods.applicable_kinds = interface
dotnet_naming_style.interface_prefix_style.required_prefix = I

# Constant fields should use PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const

# Non-private static readonly fields should use PascalCase
dotnet_naming_rule.public_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.public_static_fields_should_be_pascal_case.symbols = public_static_readonly_fields
dotnet_naming_rule.public_static_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.public_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.public_static_readonly_fields.required_modifiers = static, readonly
dotnet_naming_symbols.public_static_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected

# Static nonpublic fields should have "s_" prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = warning
dotnet_naming_rule.static_fields_should_have_prefix.symbols = static_nonpublic_fields
dotnet_naming_rule.static_fields_should_have_prefix.style = static_prefix_style
dotnet_naming_symbols.static_nonpublic_fields.applicable_kinds = field
dotnet_naming_symbols.static_nonpublic_fields.required_modifiers = static
dotnet_naming_symbols.static_nonpublic_fields.applicable_accessibilities = private, protected, internal, protected_internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization = camel_case

# Nonpublic fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = warning
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols = nonpublic_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case_underscore_style
dotnet_naming_symbols.nonpublic_fields.applicable_kinds = field
dotnet_naming_symbols.nonpublic_fields.applicable_accessibilities = private, protected, internal, protected_internal, private_protected
dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case

# Code style defaults
csharp_using_directive_placement = outside_namespace:suggestion
dotnet_sort_system_directives_first = true
csharp_prefer_braces = true:silent
csharp_preserve_single_line_blocks = true:none
csharp_preserve_single_line_statements = false:none
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_simple_using_statement = false:none
csharp_style_prefer_switch_expression = true:suggestion
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = false:warning

# Expression-bodied members
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_operators = false
csharp_style_expression_bodied_properties = false
csharp_style_expression_bodied_indexers = false
csharp_style_expression_bodied_accessors = false
csharp_style_expression_bodied_lambdas = false
csharp_style_expression_bodied_local_functions = false

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

# Null checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Other features
csharp_style_prefer_index_operator = false:none
csharp_style_prefer_range_operator = false:none
csharp_style_pattern_local_over_anonymous_function = false:none

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# License header
file_header_template = ------------------------------------------------------------------------------\nCopyright (c) 2025 SevenCs GmbH, All rights reserved\n------------------------------------------------------------------------------
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent

# Code analysis rules
# See: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/categories
dotnet_analyzer_diagnostic.category-CodeQuality.severity = warning
dotnet_analyzer_diagnostic.category-Design.severity = warning
dotnet_analyzer_diagnostic.category-Documentation.severity = warning
#dotnet_analyzer_diagnostic.category-Globalization.severity = warning
dotnet_analyzer_diagnostic.category-Interoperability.severity = warning
dotnet_analyzer_diagnostic.category-Maintainability.severity = warning
dotnet_analyzer_diagnostic.category-Naming.severity = warning
dotnet_analyzer_diagnostic.category-Performance.severity = warning
dotnet_analyzer_diagnostic.category-SingleFile.severity = warning
dotnet_analyzer_diagnostic.category-Reliability.severity = warning
dotnet_analyzer_diagnostic.category-Security.severity = warning
dotnet_analyzer_diagnostic.category-Style.severity = warning
dotnet_analyzer_diagnostic.category-Usage.severity = warning

# IDE0007: Use var instead of explicit type
dotnet_diagnostic.IDE0007.severity = suggestion

# IDE0008: Use explicit type instead of var
dotnet_diagnostic.IDE0008.severity = default

# IDE0017: Use object initializers
dotnet_diagnostic.IDE0017.severity = suggestion

# IDE0022: Use expression body for methods
dotnet_diagnostic.IDE0022.severity = default

# IDE0023: Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = default

# IDE0023: Use expression body for operators
dotnet_diagnostic.IDE0024.severity = default

# IDE0025: Use expression body for properties
dotnet_diagnostic.IDE0025.severity = default

# IDE0026: Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = default

# IDE0027: Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = default

# IDE0045: Use conditional expression for assignment
dotnet_diagnostic.IDE0045.severity = default

# IDE0046: Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = default

# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = default

# IDE0072: Add missing cases to switch expression
dotnet_diagnostic.IDE0072.severity = suggestion

# IDE0073: Require file header
dotnet_diagnostic.IDE0073.severity = none

# IDE0200: Remove unnecessary lambda expression
dotnet_diagnostic.IDE0200.severity = none

# IDE0290: Use primary constructor
dotnet_diagnostic.IDE0290.severity = none

# IDE0305: Use collection expression for fluent
dotnet_diagnostic.IDE0305.severity = none

# JSON002: Probable JSON string detected
dotnet_diagnostic.JSON002.severity = none

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = none

# CA1826: Use property instead of Linq Enumerable method
dotnet_diagnostic.CA1826.severity = suggestion

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = none

# CA1851: Possible multiple enumerations of IEnumerable collection
dotnet_diagnostic.CA1851.severity = warning

# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = none

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = warning

# CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = warning

# VSTHRD111: Use .ConfigureAwait(bool)
dotnet_diagnostic.VSTHRD111.severity = none


# Set severity for all Roslynator analyzers
dotnet_analyzer_diagnostic.category-roslynator.severity = warning

# RCS0001: Add blank line after embedded statement
dotnet_diagnostic.RCS0001.severity = warning

# RCS0002: Add blank line after #region
dotnet_diagnostic.RCS0002.severity = warning

# RCS0003: Add blank line after using directive list
dotnet_diagnostic.RCS0003.severity = warning

# RCS0005: Add blank line before #endregion
dotnet_diagnostic.RCS0005.severity = warning

# RCS0006: Add blank line before using directive list
dotnet_diagnostic.RCS0006.severity = warning

# RCS0008: Add blank line between closing brace and next statement
dotnet_diagnostic.RCS0008.severity = warning

# RCS0009: Add blank line between declaration and documentation comment
dotnet_diagnostic.RCS0009.severity = warning

# RCS1093: Empty file
dotnet_diagnostic.RCS1093.severity = none

# RCS0011: Add/remove blank line between single-line accessors
dotnet_diagnostic.RCS0011.severity = warning
roslynator_blank_line_between_single_line_accessors = false

# RCS0013: Add blank line between single-line declarations of different kind
dotnet_diagnostic.RCS0013.severity = warning

# RCS0015: Add/remove blank line between using directives
dotnet_diagnostic.RCS0015.severity = warning
roslynator_blank_line_between_using_directives = never

# RCS0016: Put attribute list on its own line
dotnet_diagnostic.RCS0016.severity = warning

# RCS0020: Format accessor's braces on a single line or multiple lines
dotnet_diagnostic.RCS0020.severity = warning
roslynator_accessor_braces_style = multi_line

# RCS0021: Format block's braces on a single line or multiple lines
dotnet_diagnostic.RCS0021.severity = warning
roslynator_block_braces_style = multi_line

# RCS0023: Format type declaration's braces
dotnet_diagnostic.RCS0023.severity = warning

# RCS0024: Add new line after switch label
dotnet_diagnostic.RCS0024.severity = warning

# RCS0025: Put full accessor on its own line
dotnet_diagnostic.RCS0025.severity = warning

# RCS0027: Place new line after/before binary operator
dotnet_diagnostic.RCS0027.severity = warning
roslynator_binary_operator_new_line = after

# RCS0028: Place new line after/before '?:' operator
dotnet_diagnostic.RCS0028.severity = warning
roslynator_conditional_operator_new_line = before

# RCS0029: Put constructor initializer on its own line
dotnet_diagnostic.RCS0029.severity = warning

# RCS0030: Put embedded statement on its own line
dotnet_diagnostic.RCS0030.severity = warning

# RCS0031: Put enum member on its own line
dotnet_diagnostic.RCS0031.severity = warning

# RCS0032: Place new line after/before arrow token
dotnet_diagnostic.RCS0032.severity = warning
roslynator_arrow_token_new_line = after

# RCS0033: Put statement on its own line
dotnet_diagnostic.RCS0033.severity = warning

# RCS0034: Put type parameter constraint on its own line
dotnet_diagnostic.RCS0034.severity = warning

# RCS0039: Remove new line before base list
dotnet_diagnostic.RCS0039.severity = warning

# RCS0041: Remove new line between 'if' keyword and 'else' keyword
dotnet_diagnostic.RCS0041.severity = warning

# RCS0042: Use carriage return + linefeed as new line
dotnet_diagnostic.RCS0042.severity = warning

# RCS0044: Use linefeed as new line
# Uncomment this line only in development environment
# dotnet_diagnostic.RCS0044.severity = warning

# RCS0046: Use spaces instead of tab
dotnet_diagnostic.RCS0046.severity = warning

# RCS0049: Add blank line after top comment
dotnet_diagnostic.RCS0049.severity = warning

# RCS0050: Add blank line before top declaration
dotnet_diagnostic.RCS0050.severity = warning

# RCS0051: Add/remove new line before 'while' in 'do' statement
dotnet_diagnostic.RCS0051.severity = warning
roslynator_new_line_before_while_in_do_statement = true

# RCS0052: Place new line after/before equals token
dotnet_diagnostic.RCS0052.severity = warning
roslynator_equals_token_new_line = after

# RCS0057: Normalize whitespace at the beginning of a file
dotnet_diagnostic.RCS0057.severity = warning

# RCS0058: Normalize whitespace at the end of a file
dotnet_diagnostic.RCS0058.severity = warning
roslynator_new_line_at_end_of_file = true

# RCS0059: Place new line after/before null-conditional operator
dotnet_diagnostic.RCS0059.severity = warning
roslynator_null_conditional_operator_new_line = before

# RCS0060: Add/remove line after file scoped namespace declaration
dotnet_diagnostic.RCS0060.severity = warning

# RCS0061: Add/remove blank line between switch sections
dotnet_diagnostic.RCS0061.severity = warning
roslynator_blank_line_between_switch_sections = include

# RCS1021: Convert lambda expression body to expression body
dotnet_diagnostic.RCS1021.severity = suggestion

# RCS1146: Use conditional access
dotnet_diagnostic.RCS1146.severity = silent

# RCS1161: Enum should declare explicit values
dotnet_diagnostic.RCS1161.severity = none

# RCS1211: Remove unnecessary 'else'
dotnet_diagnostic.RCS1211.severity = silent

# RCS1246: Use element access
dotnet_diagnostic.RCS1246.severity = suggestion

# ROS0001: Analyzer is obsolete
dotnet_diagnostic.ROS0001.severity = warning

# ROS0002: Analyzer option is obsolete
dotnet_diagnostic.ROS0002.severity = warning

# ROS0003: Analyzer requires config option to be specified
dotnet_diagnostic.ROS0003.severity = warning


# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1108: Block statements should not contain embedded comments
dotnet_diagnostic.SA1108.severity = none

# SA1116: The parameters should begin on the line after the declaration, whenever the parameter span across multiple lines
dotnet_diagnostic.SA1116.severity = none

# SA1117: The parameters should all be placed on the same line or each parameter should be placed on its own line
dotnet_diagnostic.SA1117.severity = none

# SA1118: The parameter spans multiple lines
dotnet_diagnostic.SA1118.severity = none

# SA1119: Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1119.severity = none

# SA1122: Use string.Empty for empty strings
dotnet_diagnostic.SA1122.severity = none

# SA1124: Do not use regions
dotnet_diagnostic.SA1124.severity = none

# SA1130: Use lambda syntax
dotnet_diagnostic.SA1130.severity = none

# SA1133: Each attribute should be placed in its own set of square brackets
dotnet_diagnostic.SA1133.severity = none

# SA1202: 'public' members should come before 'private' members
dotnet_diagnostic.SA1202.severity = none

# SA1204: Static members should appear before non-static members
dotnet_diagnostic.SA1204.severity = none

# SA1300: Element 'eSync' should begin with an uppercase letter
dotnet_diagnostic.SA1300.severity = none

# SA1308: Field 's_clishSemaphore' should not begin with the prefix 's_'
dotnet_diagnostic.SA1308.severity = none

# SA1309: Field '_environment' should not begin with an underscore
dotnet_diagnostic.SA1309.severity = none

# SA1311: Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1311.severity = none

# SA1316: Tuple element names should use correct casing
dotnet_diagnostic.SA1316.severity = none

# SA1402: File may only contain a single type 
dotnet_diagnostic.SA1402.severity = none

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = none

# SA1601: Partial elements should be documented
dotnet_diagnostic.SA1601.severity = none

# SA1615: Element return value should be documented
dotnet_diagnostic.SA1615.severity = none

# SA1623: The property's documentation summary text should begin with: 'Gets'
dotnet_diagnostic.SA1623.severity = none

# SA1633: The file header is missing or not located at the top of the file.
dotnet_diagnostic.SA1633.severity = none

# SA1648: inheritdoc should be used with inheriting class
dotnet_diagnostic.SA1648.severity = none

# Disable code analysis rules that cause compilation error
dotnet_diagnostic.IDE0058.severity = none
dotnet_diagnostic.IDE0059.severity = none
dotnet_diagnostic.IDE0060.severity = none
dotnet_diagnostic.NU1507.severity = none


# Shell scripts
[*.sh]
end_of_line = lf
[*.{cmd,bat}]
end_of_line = crlf